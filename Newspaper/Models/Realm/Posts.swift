/* DO NOT EDIT | Generated by gyro */

import RealmSwift
import Foundation

final class Posts: Object, Decodable {
  private enum Keys: String, CodingKey {
  case status = "status"
  case posts = "posts"
  }


  let status = RealmOptional<Bool>()
  let posts = List<Post>()




  convenience required init(from decoder: Decoder) throws {
    let container = try decoder.container(keyedBy: Keys.self)
    let status = try container.decode(Bool?.self, forKey: .status)
    let posts = try container.decode([Post].self, forKey: .posts)
    self.init(status: status, posts: posts)
  }

  convenience init(status: Bool?, posts: [Post]) {
    self.init()
    self.status.value = status
    self.posts.append(objectsIn: posts)

  }
}
